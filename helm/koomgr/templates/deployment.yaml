{{ if not .Values.goinkube.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "koomgr.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "koomgr.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "koomgr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "koomgr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "koomgr.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          command:
            - /manager
          args: ["--namespace", "$(KOO_NAMESPACE)", "--config", "/etc/koo/cfg/config.yml"]
          env:
            - name: KOO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - containerPort: {{ .Values.services.webhooks.targetPort }}
            name: webhook-server
            protocol: TCP
          {{ if .Values.services.auth.enabled }}
          - containerPort: {{ .Values.services.auth.targetPort }}
            name: auth-server
            protocol: TCP
          {{ end }}
          {{ if .Values.services.dex.enabled }}
          - containerPort: {{ .Values.services.dex.targetPort }}
            name: dex-server
            protocol: TCP
          {{ end }}
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
          {{ with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{ end }}
          volumeMounts:
            - mountPath: /etc/koo/cfg
              name: config
            - mountPath: /tmp/cert/webhook-server
              name: webhook-cert
              readOnly: true
            {{ if .Values.services.auth.enabled }}
            - mountPath: /tmp/cert/auth-server
              name: auth-cert
              readOnly: true
            {{ end }}
            {{ if .Values.services.dex.enabled }}
            - mountPath: /tmp/cert/dex-server
              name: dex-cert
              readOnly: true
            {{ end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "koomgr.fullname" . }}-config
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: {{ include "koomgr.certprefix" . }}-webhook
        {{ if .Values.services.auth.enabled }}
        - name: auth-cert
          secret:
            defaultMode: 420
            secretName: {{ include "koomgr.certprefix" . }}-auth
        {{ end }}
        {{ if .Values.services.dex.enabled }}
        - name: dex-cert
          secret:
            defaultMode: 420
            secretName: {{ include "koomgr.certprefix" . }}-dex
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}