---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: users.directory.koobind.io
spec:
  group: directory.koobind.io
  names:
    kind: User
    listKind: UserList
    plural: users
    shortNames:
    - koouser
    - kuser
    - koousers
    - kusers
    singular: user
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.commonName
      name: Common name
      type: string
    - jsonPath: .spec.email
      name: Email
      type: string
    - jsonPath: .spec.uid
      name: Uid
      type: integer
    - jsonPath: .spec.comment
      name: Comment
      type: string
    - jsonPath: .spec.disabled
      name: Disabled
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              comment:
                description: Whatever extra information related to this user.
                type: string
              commonName:
                description: The user common name.
                type: string
              disabled:
                description: Prevent this user to login. Even if this user is managed
                  by an external provider (i.e LDAP)
                type: boolean
              email:
                description: The user email.
                type: string
              passwordHash:
                description: The user password, Hashed. Using golang.org/x/crypto/bcrypt.GenerateFromPassword()
                  Is optional, in case we only enrich a user from another directory
                type: string
              uid:
                description: Numerical user id
                type: integer
            type: object
          status:
            description: UserStatus defines the observed state of User
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
